[{"C:\\code\\antium\\containers\\APOS_UI\\src\\index.tsx":"1","C:\\code\\antium\\containers\\APOS_UI\\src\\app\\store.ts":"2","C:\\code\\antium\\containers\\APOS_UI\\src\\app\\App.tsx":"3","C:\\code\\antium\\containers\\APOS_UI\\src\\app\\rootReducer.ts":"4","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\todoList\\TodoList.tsx":"5","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\todoList\\AddTodo.tsx":"6","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\objectScans\\ObjectScansList.tsx":"7","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\todoList\\TodoListItem.tsx":"8","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\objectScans\\objectScanSlice.ts":"9","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\todoList\\todoSlice.ts":"10","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\visibilityFilter\\visibiltyFilterSlice.ts":"11","C:\\code\\antium\\containers\\APOS_UI\\src\\utils\\request.ts":"12","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\dataDictionary\\DataDictionaryList.tsx":"13","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\dataDictionary\\dataDictionarySlice.ts":"14"},{"size":522,"mtime":1610723795451,"results":"15","hashOfConfig":"16"},{"size":591,"mtime":1610723795440,"results":"17","hashOfConfig":"16"},{"size":974,"mtime":1610752716534,"results":"18","hashOfConfig":"16"},{"size":585,"mtime":1610752585751,"results":"19","hashOfConfig":"16"},{"size":408,"mtime":1610723795447,"results":"20","hashOfConfig":"16"},{"size":741,"mtime":1610723795446,"results":"21","hashOfConfig":"16"},{"size":2452,"mtime":1610723795442,"results":"22","hashOfConfig":"16"},{"size":314,"mtime":1610723795447,"results":"23","hashOfConfig":"16"},{"size":2603,"mtime":1610753152340,"results":"24","hashOfConfig":"16"},{"size":1080,"mtime":1610723795448,"results":"25","hashOfConfig":"16"},{"size":596,"mtime":1610723795450,"results":"26","hashOfConfig":"16"},{"size":342,"mtime":1610723795456,"results":"27","hashOfConfig":"16"},{"size":2482,"mtime":1610752638466,"results":"28","hashOfConfig":"16"},{"size":3330,"mtime":1611184648522,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1ppsteo",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\code\\antium\\containers\\APOS_UI\\src\\index.tsx",[],["64","65"],"C:\\code\\antium\\containers\\APOS_UI\\src\\app\\store.ts",[],"C:\\code\\antium\\containers\\APOS_UI\\src\\app\\App.tsx",["66","67","68","69","70"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport AddTodo from 'features/todoList/AddTodo';\r\n//import '../App.css';\r\nimport TodoList from '../features/todoList/TodoList';\r\nimport ObjectScanList from 'features/objectScans/ObjectScansList';\r\nimport DataDictionaryApplicationsList from 'features/dataDictionary/DataDictionaryList';\r\nimport { RouteProps } from \"react-router\";\r\nimport { queryString }  from \"query-string\";\r\n\r\n//type TParams = { id: string };\r\n\r\ntype IProps = {\r\n\tmatch: string,\r\n\tlocation: RouteProps[\"location\"],\r\n\tchildren: RouteProps[\"children\"],\r\n}\r\n\r\nfunction App(props: IProps) {\r\n\tconst { match, location, children } = props;\r\n\t//console.log(window.location.search);\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Todos</h1>\r\n      <AddTodo />\r\n      <TodoList />\r\n      <h2>Object Scans</h2>\r\n      <ObjectScanList />\r\n      <h2>Applications</h2>\r\n      <DataDictionaryApplicationsList/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\code\\antium\\containers\\APOS_UI\\src\\app\\rootReducer.ts",[],"C:\\code\\antium\\containers\\APOS_UI\\src\\features\\todoList\\TodoList.tsx",[],"C:\\code\\antium\\containers\\APOS_UI\\src\\features\\todoList\\AddTodo.tsx",[],"C:\\code\\antium\\containers\\APOS_UI\\src\\features\\objectScans\\ObjectScansList.tsx",["71","72","73","74","75","76","77"],"import React, { useEffect, useState } from 'react';\r\nimport { RootState } from 'app/rootReducer';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { getObjectScans } from './objectScanSlice';\r\nimport { useLocation,useHistory} from 'react-router-dom';\r\nimport MUIDataTable, {\r\n\tExpandButton,\r\n\tMUIDataTableColumn,\r\n\tMUIDataTableOptions,\r\n\tMUIDataTableProps,\r\n} from \"mui-datatables\";\r\nimport queryString from 'query-string';\r\n\r\ninterface IProps {\r\n\t\t//data: (any)[];\r\n\t};\r\n\tinterface IState { };\r\n\r\n\tconst TableOptions: MUIDataTableOptions = {\r\n\t\tjumpToPage: true,\r\n\t\tfixedHeader: true,\r\n\t\tfixedSelectColumn: false,\r\n\t\tsortOrder: { name: \"amount\", direction: \"asc\" },\r\n\t\tfilterType: \"checkbox\",\r\n\t\tresponsive: \"standard\",\r\n\t\tselectableRows: \"none\",\r\n\t\televation: 0,\r\n\t\trowsPerPageOptions: [5, 10, 20, 25, 50, 100],\r\n\t\tdownloadOptions: {\r\n\t\t\tfilename: \"filename.csv\",\r\n\t\t\tseparator: \",\",\r\n\t\t},\r\n\t\tdraggableColumns: {\r\n\t\t\tenabled: true,\r\n\t\t}\r\n\t};\r\nconst columns: MUIDataTableColumn[] = [\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Info_Date\",\r\n\t\t\t\tlabel: \"APOS Scan Date\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"System_Name\",\r\n\t\t\t\tlabel: \"Enviroment\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Status\",\r\n\t\t\t\tlabel: \"Status\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Object_Type\",\r\n\t\t\t\tlabel: \"Object Type\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Objects_Scanned\",\r\n\t\t\t\tlabel: \"Objects Scanned\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_ScanDate\",\r\n\t\t\t\tlabel: \"Scan Date\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Pulse\",\r\n\t\t\t\tlabel: \"Last Scan Pulse\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_LastScannedId\",\r\n\t\t\t\tlabel: \"Last Scanned Object ID\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Config\",\r\n\t\t\t\tlabel: \"Configutation XML\",\r\n\t\t\t},\r\n];\r\n\r\nexport default function ObjectScanList(props:IProps) {\r\n\tconst dispatch = useDispatch();\r\n\tconsole.log('SCAN LIST PROPS', props);\r\n\r\n const scans = useSelector(\r\n   (state: RootState) => {\r\n     console.log('USE SELECT RootState', state);\r\n     return state.objectScans\r\n   });\r\n\tconsole.log('name',props);\r\n\r\n  useEffect(() => {\r\n\t\tconsole.debug('DISPATCHING FETCH', 'current', scans);\r\n\t\tconst type = 'webi';\r\n\t\tdispatch(getObjectScans(type));\r\n\t//\tconsole.log(location);\r\n        // Output: '?id=1&type=Pizza'\r\n        // Output: '#id=1&type=Pizza'\r\n//    dispatch(fetchUserById())\r\n  },[scans,dispatch])\r\n \r\n  return (\r\n    <Paper>\r\n\t\t\t<MUIDataTable\r\n\t\t\t\ttitle={\"TEST\"}\r\n\t\t\t\tdata={scans}\r\n\t\t\t\tcolumns={columns}\r\n\t\t\t\toptions={TableOptions}\r\n\t\t\t/>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\todoList\\TodoListItem.tsx",[],"C:\\code\\antium\\containers\\APOS_UI\\src\\features\\objectScans\\objectScanSlice.ts",["78","79","80","81","82"],"import { createSlice, PayloadAction,AsyncThunkAction,createAsyncThunk,createAction,createReducer } from '@reduxjs/toolkit';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { AppThunk, AppDispatch } from 'app/store'\r\nimport { IObjectScanResult } from 'features/types';\r\nimport { getUrlParameter} from 'utils/request';\r\nimport axios from 'axios';\r\n\r\nconst initialState: IObjectScanResult[] = [\r\n\t{\r\n\t\t\"AP_Info_Date\": \"20201231145600\",\r\n\t\t\"System_Name\": \"PROD\",\r\n\t\t\"AP_Status\": \"Started\",\r\n\t\t\"AP_Object_Type\": \"Webi\",\r\n\t\t\"AP_Objects_Scanned\": 0\r\n\t},\r\n\t{\r\n\t\t\"AP_Info_Date\": \"20201231141239\",\r\n\t\t\"System_Name\": \"TEST\",\r\n\t\t\"AP_Status\": \"Finished\",\r\n\t\t\"AP_Object_Type\": \"Webi\",\r\n\t\t\"AP_Objects_Scanned\": 0\r\n\t},\r\n\t{\r\n\t\t\"AP_Info_Date\": \"20201231085652\",\r\n\t\t\"System_Name\": \"PROD\",\r\n\t\t\"AP_Status\": \"Finished\",\r\n\t\t\"AP_Object_Type\": \"Webi\",\r\n\t\t\"AP_Objects_Scanned\": 0\r\n\t},\r\n\t{\r\n\t\t\"AP_Info_Date\": \"20201230102059\",\r\n\t\t\"System_Name\": \"TEST\",\r\n\t\t\"AP_Status\": \"Finished\",\r\n\t\t\"AP_Object_Type\": \"Webi\",\r\n\t\t\"AP_Objects_Scanned\": 0\r\n\t}\r\n];\r\n\r\nconst setObjectScans = createAction<IObjectScanResult[]>('getScans')\r\n\r\nconst objectScanSlice = createSlice({\r\n\tname: \"objectScans\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetObjectScans(state, action: PayloadAction<IObjectScanResult>) {\r\n//\t\t\tdebugger;\r\n\t\t\tconsole.log('IN Fetch, state passed', state)\r\n\t\t\tconsole.log('action', action, 'action.payload', action.payload);\r\n\t\t\tstate.concat(action.payload);\r\n\t\t},\r\n\t},\r\n\textraReducers: (builder) => {\r\n\t\tbuilder.addCase(setObjectScans, (state, action) => {\r\n//\t\t\tdebugger;\r\n\t\t\tconsole.log('ADD CASE Payload', action.payload, action.type);\r\n\t\t\treturn state.concat(action.payload);\r\n\t\t})\r\n\t}\r\n});\r\n\r\n\r\nexport const getObjectScans = (\r\n    type: string | undefined\r\n): AppThunk => async (dispatch: AppDispatch) => {\r\n\tconst type = getUrlParameter('type');\r\n//\tconsole.log('TYPE', type);\r\n\t\t\tconst res = await axios.get(`objects/scans/status/type/${type}`);\r\n\t\tconsole.log('DISPATCHING RESULTS TO SET', res.data.recordsets);\r\n\tdispatch(objectScanSlice.actions.setObjectScans(res.data.recordsets));\r\n}\r\n\r\n// export const getObjectScans = createAsyncThunk(\r\n// \t'users/fetchByIdStatus',\r\n// \tasync (userId, thunkAPI) => {\r\n// \t\tconst dispatch = useDispatch();\r\n// \t\tconst res = await axios.get('objects/scans/status/type/webi');\r\n// \t\tconsole.log('DISPATCHING RESULTS TO SET', res.data.recordsets);\r\n// \t\tdispatch(objectScanSlice.actions.setObjectScans(res.data.recordsets));\r\n// \t\tdispatch(setObjectScans(res.data.recordsets));\r\n// \t}\r\n// );\r\nexport default objectScanSlice.reducer;\r\n//const { setObjectScans } = objectScanSlice;","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\todoList\\todoSlice.ts",[],"C:\\code\\antium\\containers\\APOS_UI\\src\\features\\visibilityFilter\\visibiltyFilterSlice.ts",[],"C:\\code\\antium\\containers\\APOS_UI\\src\\utils\\request.ts",["83"],"\r\nexport const getUrlParameter = (name: string) => {\r\n\t\tconsole.log('name');\r\n\t\tname = name.replace(/[\\[]/, '\\\\[').replace(/[\\]]/, '\\\\]');\r\n\t\tvar regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\r\n\t\tvar results = regex.exec(window.location.search);\r\n\t\treturn results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\r\n\t};\r\n","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\dataDictionary\\DataDictionaryList.tsx",["84","85","86","87","88","89","90","91","92","93","94"],"import React, { useEffect, useState } from 'react';\r\nimport { RootState } from 'app/rootReducer';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { Paper } from \"@material-ui/core\";\r\nimport { getDataDictionaryApplications } from './dataDictionarySlice';\r\nimport { useLocation,useHistory} from 'react-router-dom';\r\nimport MUIDataTable, {\r\n\tExpandButton,\r\n\tMUIDataTableColumn,\r\n\tMUIDataTableOptions,\r\n\tMUIDataTableProps,\r\n} from \"mui-datatables\";\r\nimport queryString from 'query-string';\r\n\r\ninterface IProps {\r\n\t\t//data: (any)[];\r\n\t};\r\n\tinterface IState { };\r\n\r\n\tconst TableOptions: MUIDataTableOptions = {\r\n\t\tjumpToPage: true,\r\n\t\tfixedHeader: true,\r\n\t\tfixedSelectColumn: false,\r\n\t\tsortOrder: { name: \"amount\", direction: \"asc\" },\r\n\t\tfilterType: \"checkbox\",\r\n\t\tresponsive: \"standard\",\r\n\t\tselectableRows: \"none\",\r\n\t\televation: 0,\r\n\t\trowsPerPageOptions: [5, 10, 20, 25, 50, 100],\r\n\t\tdownloadOptions: {\r\n\t\t\tfilename: \"filename.csv\",\r\n\t\t\tseparator: \",\",\r\n\t\t},\r\n\t\tdraggableColumns: {\r\n\t\t\tenabled: true,\r\n\t\t}\r\n\t};\r\nconst columns: MUIDataTableColumn[] = [\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Info_Date\",\r\n\t\t\t\tlabel: \"APOS Scan Date\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"System_Name\",\r\n\t\t\t\tlabel: \"Enviroment\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Status\",\r\n\t\t\t\tlabel: \"Status\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Object_Type\",\r\n\t\t\t\tlabel: \"Object Type\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Objects_Scanned\",\r\n\t\t\t\tlabel: \"Objects Scanned\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_ScanDate\",\r\n\t\t\t\tlabel: \"Scan Date\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Pulse\",\r\n\t\t\t\tlabel: \"Last Scan Pulse\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_LastScannedId\",\r\n\t\t\t\tlabel: \"Last Scanned Object ID\",\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"AP_Config\",\r\n\t\t\t\tlabel: \"Configutation XML\",\r\n\t\t\t},\r\n];\r\n\r\nexport default function DataDictionaryApplicationsList(props:IProps) {\r\n\tconst dispatch = useDispatch();\r\n\tconsole.log('SCAN LIST PROPS', props);\r\n\r\n const applications = useSelector(\r\n   (state: RootState) => {\r\n     console.log('USE SELECT RootState', state);\r\n     return state.dataDicitionaryApplications\r\n   });\r\n\r\n  useEffect(() => {\r\n\t\tconsole.debug('DISPATCHING FETCH', 'current', applications);\r\n\t\tconst type = 'webi';\r\n\t\t//[TODO] REFACTOR so the table has the same value\r\n\t\tdispatch(getDataDictionaryApplications(25));\r\n\t//\tconsole.log(location);\r\n        // Output: '?id=1&type=Pizza'\r\n        // Output: '#id=1&type=Pizza'\r\n//    dispatch(fetchUserById())\r\n  },[applications,dispatch])\r\n \r\n  return (\r\n    <Paper>\r\n\t\t\t{JSON.stringify(applications)}\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n","C:\\code\\antium\\containers\\APOS_UI\\src\\features\\dataDictionary\\dataDictionarySlice.ts",["95","96","97","98","99","100","101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":12},{"ruleId":"107","severity":1,"message":"111","line":9,"column":10,"nodeType":"109","messageId":"110","endLine":9,"endColumn":21},{"ruleId":"107","severity":1,"message":"112","line":20,"column":10,"nodeType":"109","messageId":"110","endLine":20,"endColumn":15},{"ruleId":"107","severity":1,"message":"113","line":20,"column":17,"nodeType":"109","messageId":"110","endLine":20,"endColumn":25},{"ruleId":"107","severity":1,"message":"114","line":20,"column":27,"nodeType":"109","messageId":"110","endLine":20,"endColumn":35},{"ruleId":"107","severity":1,"message":"115","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"116","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":21},{"ruleId":"107","severity":1,"message":"117","line":6,"column":22,"nodeType":"109","messageId":"110","endLine":6,"endColumn":32},{"ruleId":"107","severity":1,"message":"118","line":8,"column":2,"nodeType":"109","messageId":"110","endLine":8,"endColumn":14},{"ruleId":"107","severity":1,"message":"119","line":11,"column":2,"nodeType":"109","messageId":"110","endLine":11,"endColumn":19},{"ruleId":"107","severity":1,"message":"111","line":13,"column":8,"nodeType":"109","messageId":"110","endLine":13,"endColumn":19},{"ruleId":"107","severity":1,"message":"120","line":18,"column":12,"nodeType":"109","messageId":"110","endLine":18,"endColumn":18},{"ruleId":"107","severity":1,"message":"121","line":1,"column":37,"nodeType":"109","messageId":"110","endLine":1,"endColumn":53},{"ruleId":"107","severity":1,"message":"122","line":1,"column":54,"nodeType":"109","messageId":"110","endLine":1,"endColumn":70},{"ruleId":"107","severity":1,"message":"123","line":1,"column":84,"nodeType":"109","messageId":"110","endLine":1,"endColumn":97},{"ruleId":"107","severity":1,"message":"124","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"125","line":2,"column":22,"nodeType":"109","messageId":"110","endLine":2,"endColumn":33},{"ruleId":"126","severity":1,"message":"127","line":4,"column":25,"nodeType":"128","messageId":"129","endLine":4,"endColumn":26,"suggestions":"130"},{"ruleId":"107","severity":1,"message":"115","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"116","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":21},{"ruleId":"107","severity":1,"message":"117","line":6,"column":22,"nodeType":"109","messageId":"110","endLine":6,"endColumn":32},{"ruleId":"107","severity":1,"message":"131","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":20},{"ruleId":"107","severity":1,"message":"118","line":8,"column":2,"nodeType":"109","messageId":"110","endLine":8,"endColumn":14},{"ruleId":"107","severity":1,"message":"119","line":11,"column":2,"nodeType":"109","messageId":"110","endLine":11,"endColumn":19},{"ruleId":"107","severity":1,"message":"111","line":13,"column":8,"nodeType":"109","messageId":"110","endLine":13,"endColumn":19},{"ruleId":"107","severity":1,"message":"120","line":18,"column":12,"nodeType":"109","messageId":"110","endLine":18,"endColumn":18},{"ruleId":"107","severity":1,"message":"132","line":20,"column":8,"nodeType":"109","messageId":"110","endLine":20,"endColumn":41},{"ruleId":"107","severity":1,"message":"133","line":38,"column":7,"nodeType":"109","messageId":"110","endLine":38,"endColumn":36},{"ruleId":"107","severity":1,"message":"134","line":89,"column":9,"nodeType":"109","messageId":"110","endLine":89,"endColumn":13},{"ruleId":"107","severity":1,"message":"121","line":1,"column":37,"nodeType":"109","messageId":"110","endLine":1,"endColumn":53},{"ruleId":"107","severity":1,"message":"122","line":1,"column":54,"nodeType":"109","messageId":"110","endLine":1,"endColumn":70},{"ruleId":"107","severity":1,"message":"123","line":1,"column":84,"nodeType":"109","messageId":"110","endLine":1,"endColumn":97},{"ruleId":"107","severity":1,"message":"124","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":21},{"ruleId":"107","severity":1,"message":"125","line":2,"column":22,"nodeType":"109","messageId":"110","endLine":2,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":12,"column":22,"nodeType":"137","messageId":"138","endLine":31,"endColumn":2},{"ruleId":"107","severity":1,"message":"139","line":34,"column":7,"nodeType":"109","messageId":"110","endLine":34,"endColumn":21},{"ruleId":"107","severity":1,"message":"140","line":86,"column":7,"nodeType":"109","messageId":"110","endLine":86,"endColumn":12},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'queryString' is defined but never used.","'match' is assigned a value but never used.","'location' is assigned a value but never used.","'children' is assigned a value but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'ExpandButton' is defined but never used.","'MUIDataTableProps' is defined but never used.","'IState' is defined but never used.","'AsyncThunkAction' is defined but never used.","'createAsyncThunk' is defined but never used.","'createReducer' is defined but never used.","'useSelector' is defined but never used.","'useDispatch' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["143","144"],"'MUIDataTable' is defined but never used.","'TableOptions' is assigned a value but never used.","'columns' is assigned a value but never used.","'type' is assigned a value but never used.","@typescript-eslint/consistent-type-assertions","Use 'as IState' instead of '<IState>'.","TSTypeAssertion","as","'setObjectScans' is assigned a value but never used.","'limit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"145","fix":"146","desc":"147"},{"messageId":"148","fix":"149","desc":"150"},"removeEscape",{"range":"151","text":"152"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"153","text":"154"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[102,103],"",[102,102],"\\"]